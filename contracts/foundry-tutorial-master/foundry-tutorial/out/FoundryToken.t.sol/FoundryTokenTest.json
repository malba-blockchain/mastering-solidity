{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOnlyOwnerCanMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferAliceToBob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50612950806100316000396000f3fe60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063ba414fa6116200006e578063ba414fa61462000113578063cc8668de146200012e578063e6b718ca1462000138578063f8ccbf471462000142578063fa7626d4146200015657600080fd5b80630a9254e414620000b05780633a76846314620000bc5780636df35e4c14620000f5578063a0df47b314620000ff578063a468c3fa1462000109575b600080fd5b620000ba62000164565b005b620000d8737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ba620003fb565b620000ba62000496565b620000ba62000702565b6200011d62000a85565b6040519015158152602001620000ec565b620000ba62000bba565b620000ba62000c5c565b6000546200011d9062010000900460ff1681565b6000546200011d9060ff1681565b60405162000172906200101d565b604051809103906000f0801580156200018f573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516103e890620001c2906200102b565b908152602001604051809103906000f080158015620001e5573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392831617905560085460405163792e11f560e01b815260026004820152600092919091169063792e11f5906024016000604051808303816000875af11580156200024a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000274919081019062001083565b9050806000815181106200028c576200028c6200114e565b6020908102919091010151600a80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b8152600481019290925260248201526005604482015264416c69636560d81b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200031f57600080fd5b505af115801562000334573d6000803e3d6000fd5b50505050806001815181106200034e576200034e6200114e565b6020908102919091010151600b80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b81526004810192909252602482015260036044820152622137b160e91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620003df57600080fd5b505af1158015620003f4573d6000803e3d6000fd5b5050505050565b600954604080516395d89b4160e01b8152905162000494926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000448573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200047291908101906200118a565b6040518060400160405280600381526020016246544b60e81b81525062000cd8565b565b60095460405163da1919b360e01b81523060048201526103e860248201526001600160a01b039091169063da1919b390604401600060405180830381600087803b158015620004e457600080fd5b505af1158015620004f9573d6000803e3d6000fd5b5050505062000584600960009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057b919062001229565b6107d062000e25565b600a546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620005de57600080fd5b505af1158015620005f3573d6000803e3d6000fd5b505060408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f28dceb3925062000661919060040162001271565b600060405180830381600087803b1580156200067c57600080fd5b505af115801562000691573d6000803e3d6000fd5b5050600954600a5460405163da1919b360e01b81526001600160a01b0391821660048201526103e860248201529116925063da1919b39150604401600060405180830381600087803b158015620006e757600080fd5b505af1158015620006fc573d6000803e3d6000fd5b50505050565b600954600b546040516370a0823160e01b81526001600160a01b03918216600482015260649260009216906370a0823190602401602060405180830381865afa15801562000754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200077a919062001229565b90506200078981600062000e25565b600954600a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015620007df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080591906200128d565b50600954600a546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562000858573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087e919062001229565b90506200088c818462000e25565b600a546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620008e657600080fd5b505af1158015620008fb573d6000803e3d6000fd5b5050600954600b5460405163a9059cbb60e01b81526001600160a01b039182166004820152603c60248201529116925063a9059cbb91506044016020604051808303816000875af115801562000955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200097b91906200128d565b50600954600a546040516370a0823160e01b81526001600160a01b039182166004820152620009fe9291909116906370a0823190602401602060405180830381865afa158015620009d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009f6919062001229565b602862000e25565b600954600b546040516370a0823160e01b81526001600160a01b03918216600482015262000a809291909116906370a0823190602401602060405180830381865afa15801562000a52573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a78919062001229565b603c62000e25565b505050565b60008054610100900460ff161562000aa65750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000bb55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000b37917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620012b1565b60408051601f198184030181529082905262000b5391620012e4565b6000604051808303816000865af19150503d806000811462000b92576040519150601f19603f3d011682016040523d82523d6000602084013e62000b97565b606091505b509150508080602001905181019062000bb191906200128d565b9150505b919050565b600954604080516306fdde0360e01b8152905162000494926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000c07573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c3191908101906200118a565b6040518060400160405280600c81526020016b2337bab732393caa37b5b2b760a11b81525062000cd8565b600954604080516318160ddd60e01b8152905162000494926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ccf919062001229565b6103e862000e25565b8060405160200162000ceb9190620012e4565b604051602081830303815290604052805190602001208260405160200162000d149190620012e4565b604051602081830303815290604052805190602001201462000e21577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d9d9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162000dd6919062001302565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000e0f919062001349565b60405180910390a162000e2162000f0a565b5050565b80821462000e21577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000e989060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000ed1919062001374565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000e0f9190620013ad565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200100c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000fa79291602001620012b1565b60408051601f198184030181529082905262000fc391620012e4565b6000604051808303816000865af19150503d806000811462001002576040519150601f19603f3d011682016040523d82523d6000602084013e62001007565b606091505b505050505b6000805461ff001916610100179055565b6106a380620013d983390190565b610e9f8062001a7c83390190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200107b576200107b62001039565b604052919050565b600060208083850312156200109757600080fd5b825167ffffffffffffffff80821115620010b057600080fd5b818501915085601f830112620010c557600080fd5b815181811115620010da57620010da62001039565b8060051b9150620010ed8483016200104f565b81815291830184019184810190888411156200110857600080fd5b938501935b838510156200114257845192506001600160a01b0383168314620011315760008081fd5b82825293850193908501906200110d565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60005b838110156200118157818101518382015260200162001167565b50506000910152565b6000602082840312156200119d57600080fd5b815167ffffffffffffffff80821115620011b657600080fd5b818401915084601f830112620011cb57600080fd5b815181811115620011e057620011e062001039565b620011f5601f8201601f19166020016200104f565b91508082528560208285010111156200120d57600080fd5b6200122081602084016020860162001164565b50949350505050565b6000602082840312156200123c57600080fd5b5051919050565b600081518084526200125d81602086016020860162001164565b601f01601f19169290920160200192915050565b60208152600062001286602083018462001243565b9392505050565b600060208284031215620012a057600080fd5b815180151581146200128657600080fd5b6001600160e01b0319831681528151600090620012d681600485016020870162001164565b919091016004019392505050565b60008251620012f881846020870162001164565b9190910192915050565b6040815260006200132d60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262001341818562001243565b949350505050565b6040815260006200132d60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200139f60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200139f60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe6000805462ff00ff1916620100011790556b75736572206164647265737360a01b60a052600c60805260ac6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db760085534801561005d57600080fd5b506106368061006d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ba414fa61161005b578063ba414fa614610106578063f82de7b01461011e578063f8ccbf4714610133578063fa7626d41461014657600080fd5b80633a76846314610082578063792e11f5146100ba578063b90a68fa146100da575b600080fd5b61009d737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cd6100c8366004610474565b610153565b6040516100b1919061048d565b60088054604080516020808201849052825180830382018152918301909252805191012090915561009d565b61010e6102d1565b60405190151581526020016100b1565b61013161012c366004610474565b6103fc565b005b60005461010e9062010000900460ff1681565b60005461010e9060ff1681565b606060008267ffffffffffffffff811115610170576101706104da565b604051908082528060200260200182016040528015610199578160200160208202803683370190505b50905060005b838110156102ca576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d91906104f0565b60405163c88a5e6d60e01b81526001600160a01b038216600482015268056bc75e2d631000006024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b505050508083838151811061029f5761029f610520565b6001600160a01b039092166020928302919091019091015250806102c28161054c565b91505061019f565b5092915050565b60008054610100900460ff16156102f15750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103f75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161037f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610595565b60408051601f1981840301815290829052610399916105b9565b6000604051808303816000865af19150503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b50915050808060200190518101906103f391906105c5565b9150505b919050565b600061040882436105e7565b6040516301f7b4f360e41b815260048101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050505050565b60006020828403121561048657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104ce5783516001600160a01b0316835292840192918401916001016104a9565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561050257600080fd5b81516001600160a01b038116811461051957600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161055e5761055e610536565b5060010190565b6000815160005b81811015610586576020818501810151868301520161056c565b50600093019283525090919050565b6001600160e01b03198316815260006105b16004830184610565565b949350505050565b60006105198284610565565b6000602082840312156105d757600080fd5b8151801515811461051957600080fd5b808201808211156105fa576105fa610536565b9291505056fea2646970667358221220cd0d6bfcbfe3b956d228f93bc778280bae0c5bd90aeaf8bdc74dc9e8d33e81b264736f6c6343000811003360806040523480156200001157600080fd5b5060405162000e9f38038062000e9f8339810160408190526200003491620001e6565b6040518060400160405280600c81526020016b2337bab732393caa37b5b2b760a11b8152506040518060400160405280600381526020016246544b60e81b8152508160039081620000869190620002a4565b506004620000958282620002a4565b505050620000b2620000ac620000c560201b60201c565b620000c9565b620000be33826200011b565b5062000398565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200018a919062000370565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600060208284031215620001f957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022b57607f821691505b6020821081036200024c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e157600081815260208120601f850160051c810160208610156200027b5750805b601f850160051c820191505b818110156200029c5782815560010162000287565b505050505050565b81516001600160401b03811115620002c057620002c062000200565b620002d881620002d1845462000216565b8462000252565b602080601f831160018114620003105760008415620002f75750858301515b600019600386901b1c1916600185901b1785556200029c565b600085815260208120601f198616915b82811015620003415788860151825594840194600190910190840162000320565b5085821015620003605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200039257634e487b7160e01b600052601160045260246000fd5b92915050565b610af780620003a86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb146101eb578063da1919b3146101fe578063dd62ed3e14610211578063f2fde38b1461022457600080fd5b8063715018a6146101ab5780638da5cb5b146101b557806395d89b41146101d0578063a457c2d7146101d857600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610237565b60405161010f9190610941565b60405180910390f35b61012b6101263660046109ab565b6102c9565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046109d5565b6102e3565b6040516012815260200161010f565b61012b61017d3660046109ab565b610307565b61013f610190366004610a11565b6001600160a01b031660009081526020819052604090205490565b6101b3610329565b005b6005546040516001600160a01b03909116815260200161010f565b61010261033d565b61012b6101e63660046109ab565b61034c565b61012b6101f93660046109ab565b6103cc565b6101b361020c3660046109ab565b6103da565b61013f61021f366004610a33565b6103f0565b6101b3610232366004610a11565b61041b565b60606003805461024690610a66565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610a66565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d7818585610494565b60019150505b92915050565b6000336102f18582856105b8565b6102fc858585610632565b506001949350505050565b6000336102d781858561031a83836103f0565b6103249190610aa0565b610494565b6103316107d6565b61033b6000610830565b565b60606004805461024690610a66565b6000338161035a82866103f0565b9050838110156103bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102fc8286868403610494565b6000336102d7818585610632565b6103e26107d6565b6103ec8282610882565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104236107d6565b6001600160a01b0381166104885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b6565b61049181610830565b50565b6001600160a01b0383166104f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b6001600160a01b0382166105575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105c484846103f0565b9050600019811461062c578181101561061f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b6565b61062c8484848403610494565b50505050565b6001600160a01b0383166106965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b6565b6001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b6565b6001600160a01b038316600090815260208190526040902054818110156107705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361062c565b6005546001600160a01b0316331461033b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108d85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b6565b80600260008282546108ea9190610aa0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561096e57858101830151858201604001528201610952565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109a657600080fd5b919050565b600080604083850312156109be57600080fd5b6109c78361098f565b946020939093013593505050565b6000806000606084860312156109ea57600080fd5b6109f38461098f565b9250610a016020850161098f565b9150604084013590509250925092565b600060208284031215610a2357600080fd5b610a2c8261098f565b9392505050565b60008060408385031215610a4657600080fd5b610a4f8361098f565b9150610a5d6020840161098f565b90509250929050565b600181811c90821680610a7a57607f821691505b602082108103610a9a57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102dd57634e487b7160e01b600052601160045260246000fdfea26469706673582212203658b36973f8ea94ae9a91a98e783ac26f6e399bac8a868b5f40cf823e47e56364736f6c63430008110033a264697066735822122023bd7b405f0f6f74fbd0d496dcfea7d3f20ca5fd477f315b7fa1bbfdb916003b64736f6c63430008110033",
    "sourceMap": "207:2504:12:-:0;;;1609:26:0;;;-1:-1:-1;;173:28:1;;;;;207:2504:12;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "207:2504:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:437;;;:::i;:::-;;328:38:1;;255:64;328:38;;;;;-1:-1:-1;;;;;189:32:14;;;171:51;;159:2;144:18;328:38:1;;;;;;;;1058:84:12;;;:::i;1340:361::-;;;:::i;1885:823::-;;;:::i;1865:600:0:-;;;:::i;:::-;;;398:14:14;;391:22;373:41;;361:2;346:18;1865:600:0;233:187:14;929:84:12;;;:::i;1195:83::-;;;:::i;173:28:1:-;;;;;;;;;;;;1609:26:0;;;;;;;;;449:437:12;492:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;484:5:12;:23;;-1:-1:-1;;;;;;484:23:12;-1:-1:-1;;;;;484:23:12;;;;;;;;;;526:22;;543:4;;526:22;;;:::i;:::-;582:25:14;;;570:2;555:18;526:22:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;518:5:12;:30;;-1:-1:-1;;;;;;518:30:12;-1:-1:-1;;;;;518:30:12;;;;;;658:5;;:20;;-1:-1:-1;;;658:20:12;;676:1;658:20;;;582:25:14;-1:-1:-1;;658:5:12;;;;;:17;;555:18:14;;658:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;658:20:12;;;;;;;;;;;;:::i;:::-;625:53;;738:5;744:1;738:8;;;;;;;;:::i;:::-;;;;;;;;;;;730:5;:16;;-1:-1:-1;;;;;;730:16:12;-1:-1:-1;;;;;730:16:12;;;;;;;;757:24;;;-1:-1:-1;;;757:24:12;;;;;2705:51:14;;;;2772:18;;;2765:30;2831:1;2811:18;;;2804:29;-1:-1:-1;;;2849:18:14;;;2842:35;255:64:1;;757:8:12;;2894:19:14;;757:24:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;839:5;845:1;839:8;;;;;;;;:::i;:::-;;;;;;;;;;;833:3;:14;;-1:-1:-1;;;;;;833:14:12;-1:-1:-1;;;;;833:14:12;;;;;;;;858:20;;;-1:-1:-1;;;858:20:12;;;;;3144:51:14;;;;3211:18;;;3204:30;3270:1;3250:18;;;3243:29;-1:-1:-1;;;3288:18:14;;;3281:33;255:64:1;;858:8:12;;3331:19:14;;858:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:413;449:437::o;1058:84::-;1112:5;;:14;;;-1:-1:-1;;;1112:14:12;;;;1103:31;;-1:-1:-1;;;;;1112:5:12;;:12;;:14;;;;;:5;;:14;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1112:14:12;;;;;;;;;;;;:::i;:::-;1103:31;;;;;;;;;;;;;-1:-1:-1;;;1103:31:12;;;:8;:31::i;:::-;1058:84::o;1340:361::-;1433:5;;:34;;-1:-1:-1;;;1433:34:12;;1455:4;1433:34;;;4525:51:14;1462:4:12;4592:18:14;;;4585:34;-1:-1:-1;;;;;1433:5:12;;;;:13;;4498:18:14;;1433:34:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:35;1487:5;;;;;;;;;-1:-1:-1;;;;;1487:5:12;-1:-1:-1;;;;;1487:17:12;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1508:4;1478:8;:35::i;:::-;1581:5;;1567:20;;-1:-1:-1;;;1567:20:12;;-1:-1:-1;;;;;1581:5:12;;;1567:20;;;171:51:14;255:64:1;;1567:13:12;;144:18:14;;1567:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1614:41:12;;;;;;;;;;;;;;;;;1598:58;;-1:-1:-1;;;1598:58:12;;255:64:1;;-1:-1:-1;1598:15:12;;-1:-1:-1;1598:58:12;;1614:41;1598:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1667:5:12;;1681;;1667:26;;-1:-1:-1;;;1667:26:12;;-1:-1:-1;;;;;1681:5:12;;;1667:26;;;4525:51:14;1688:4:12;4592:18:14;;;4585:34;1667:5:12;;;-1:-1:-1;1667:13:12;;-1:-1:-1;4498:18:14;;1667:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:361::o;1885:823::-;2091:5;;2107:3;;2091:20;;-1:-1:-1;;;2091:20:12;;-1:-1:-1;;;;;2107:3:12;;;2091:20;;;171:51:14;1976:3:12;;1947:26;;2091:5;;:15;;144:18:14;;2091:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2061:50;;2122:32;2131:19;2152:1;2122:8;:32::i;:::-;2236:5;;2251;;2236:41;;-1:-1:-1;;;2236:41:12;;-1:-1:-1;;;;;2251:5:12;;;2236:41;;;4525:51:14;4592:18;;;4585:34;;;2236:5:12;;;:14;;4498:18:14;;2236:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2364:5:12;;2380;;2364:22;;-1:-1:-1;;;2364:22:12;;-1:-1:-1;;;;;2380:5:12;;;2364:22;;;171:51:14;2332:29:12;;2364:5;;;;;:15;;144:18:14;;2364:22:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2332:54;;2397:51;2406:21;2429:18;2397:8;:51::i;:::-;2516:5;;2502:20;;-1:-1:-1;;;2502:20:12;;-1:-1:-1;;;;;2516:5:12;;;2502:20;;;171:51:14;255:64:1;;2502:13:12;;144:18:14;;2502:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2533:5:12;;2548:3;;2533:23;;-1:-1:-1;;;2533:23:12;;-1:-1:-1;;;;;2548:3:12;;;2533:23;;;4525:51:14;2553:2:12;4592:18:14;;;4585:34;2533:5:12;;;-1:-1:-1;2533:14:12;;-1:-1:-1;4498:18:14;;2533:23:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2576:5:12;;2592;;2576:22;;-1:-1:-1;;;2576:22:12;;-1:-1:-1;;;;;2592:5:12;;;2576:22;;;171:51:14;2567:36:12;;2576:5;;;;;:15;;144:18:14;;2576:22:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2600:2;2567:8;:36::i;:::-;2673:5;;2689:3;;2673:20;;-1:-1:-1;;;2673:20:12;;-1:-1:-1;;;;;2689:3:12;;;2673:20;;;171:51:14;2664:34:12;;2673:5;;;;;:15;;144:18:14;;2673:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2695:2;2664:8;:34::i;:::-;1926:782;;;1885:823::o;1865:600:0:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;4525:51:14;;;-1:-1:-1;;;4592:18:14;;;4585:34;2251:43:0;;;;;;;;;4498:18:14;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;929:84:12:-;976:5;;:12;;;-1:-1:-1;;;976:12:12;;;;967:38;;-1:-1:-1;;;;;976:5:12;;:10;;:12;;;;;:5;;:12;;;;;;;:5;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;976:12:12;;;;;;;;;;;;:::i;:::-;967:38;;;;;;;;;;;;;-1:-1:-1;;;967:38:12;;;:8;:38::i;1195:83::-;1244:5;;:19;;;-1:-1:-1;;;1244:19:12;;;;1235:35;;-1:-1:-1;;;;;1244:5:12;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1265:4;1235:8;:35::i;15115:351:0:-;15252:1;15235:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15225:30;;;;;;15218:1;15201:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15191:30;;;;;;:64;15187:272;;15277:43;;;;;8151:2:14;8133:21;;;8190:2;8170:18;;;8163:30;8229:34;8224:2;8209:18;;8202:62;-1:-1:-1;;;8295:2:14;8280:18;;8273:34;8339:3;8324:19;;7949:400;15277:43:0;;;;;;;;15340:33;15371:1;15340:33;;;;;;:::i;:::-;;;;;;;;15393;15424:1;15393:33;;;;;;:::i;:::-;;;;;;;;15441:6;:4;:6::i;:::-;15115:351;;:::o;5358:269::-;5421:1;5416;:6;5412:208;;5444:41;;;;;9772:2:14;9754:21;;;9811:2;9791:18;;;9784:30;9850:34;9845:2;9830:18;;9823:62;-1:-1:-1;;;9916:2:14;9901:18;;9894:32;9958:3;9943:19;;9570:398;5444:41:0;;;;;;;;5505:31;5534:1;5505:31;;;;;;:::i;:::-;;;;;;;;5556;5585:1;5556:31;;;;;;:::i;2474:435::-;3070:42;3058:55;3141:16;2510:367;;2714:67;;;1712:64;2714:67;;;10881:51:14;;;-1:-1:-1;;;10948:18:14;;;10941:34;;;;2774:4:0;10991:18:14;;;10984:34;2548:11:0;;1712:64;2647:43;;10854:18:14;;2714:67:0;;;-1:-1:-1;;2714:67:0;;;;;;;;;;2601:199;;;2714:67;2601:199;;:::i;:::-;;;;-1:-1:-1;;2601:199:0;;;;;;;;;;2565:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2510:367:0;2887:7;:14;;-1:-1:-1;;2887:14:0;;;;;2474:435::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;808:127:14:-;869:10;864:3;860:20;857:1;850:31;900:4;897:1;890:15;924:4;921:1;914:15;940:275;1011:2;1005:9;1076:2;1057:13;;-1:-1:-1;;1053:27:14;1041:40;;1111:18;1096:34;;1132:22;;;1093:62;1090:88;;;1158:18;;:::i;:::-;1194:2;1187:22;940:275;;-1:-1:-1;940:275:14:o;1220:1128::-;1323:6;1354:2;1397;1385:9;1376:7;1372:23;1368:32;1365:52;;;1413:1;1410;1403:12;1365:52;1446:9;1440:16;1475:18;1516:2;1508:6;1505:14;1502:34;;;1532:1;1529;1522:12;1502:34;1570:6;1559:9;1555:22;1545:32;;1615:7;1608:4;1604:2;1600:13;1596:27;1586:55;;1637:1;1634;1627:12;1586:55;1666:2;1660:9;1688:2;1684;1681:10;1678:36;;;1694:18;;:::i;:::-;1740:2;1737:1;1733:10;1723:20;;1763:28;1787:2;1783;1779:11;1763:28;:::i;:::-;1825:15;;;1895:11;;;1891:20;;;1856:12;;;;1923:19;;;1920:39;;;1955:1;1952;1945:12;1920:39;1979:11;;;;1999:319;2015:6;2010:3;2007:15;1999:319;;;2082:10;;;-1:-1:-1;;;;;;2125:31:14;;2115:42;;2105:140;;2199:1;2228:2;2224;2217:14;2105:140;2258:18;;;2032:12;;;;2296;;;;1999:319;;;2337:5;1220:1128;-1:-1:-1;;;;;;;;1220:1128:14:o;2353:127::-;2414:10;2409:3;2405:20;2402:1;2395:31;2445:4;2442:1;2435:15;2469:4;2466:1;2459:15;3361:250;3446:1;3456:113;3470:6;3467:1;3464:13;3456:113;;;3546:11;;;3540:18;3527:11;;;3520:39;3492:2;3485:10;3456:113;;;-1:-1:-1;;3603:1:14;3585:16;;3578:27;3361:250::o;3616:719::-;3696:6;3749:2;3737:9;3728:7;3724:23;3720:32;3717:52;;;3765:1;3762;3755:12;3717:52;3798:9;3792:16;3827:18;3868:2;3860:6;3857:14;3854:34;;;3884:1;3881;3874:12;3854:34;3922:6;3911:9;3907:22;3897:32;;3967:7;3960:4;3956:2;3952:13;3948:27;3938:55;;3989:1;3986;3979:12;3938:55;4018:2;4012:9;4040:2;4036;4033:10;4030:36;;;4046:18;;:::i;:::-;4088:53;4131:2;4112:13;;-1:-1:-1;;4108:27:14;4137:2;4104:36;4088:53;:::i;:::-;4075:66;;4164:2;4157:5;4150:17;4204:7;4199:2;4194;4190;4186:11;4182:20;4179:33;4176:53;;;4225:1;4222;4215:12;4176:53;4238:67;4302:2;4297;4290:5;4286:14;4281:2;4277;4273:11;4238:67;:::i;:::-;-1:-1:-1;4324:5:14;3616:719;-1:-1:-1;;;;3616:719:14:o;4630:184::-;4700:6;4753:2;4741:9;4732:7;4728:23;4724:32;4721:52;;;4769:1;4766;4759:12;4721:52;-1:-1:-1;4792:16:14;;4630:184;-1:-1:-1;4630:184:14:o;5035:270::-;5076:3;5114:5;5108:12;5141:6;5136:3;5129:19;5157:76;5226:6;5219:4;5214:3;5210:14;5203:4;5196:5;5192:16;5157:76;:::i;:::-;5287:2;5266:15;-1:-1:-1;;5262:29:14;5253:39;;;;5294:4;5249:50;;5035:270;-1:-1:-1;;5035:270:14:o;5310:217::-;5457:2;5446:9;5439:21;5420:4;5477:44;5517:2;5506:9;5502:18;5494:6;5477:44;:::i;:::-;5469:52;5310:217;-1:-1:-1;;;5310:217:14:o;6117:277::-;6184:6;6237:2;6225:9;6216:7;6212:23;6208:32;6205:52;;;6253:1;6250;6243:12;6205:52;6285:9;6279:16;6338:5;6331:13;6324:21;6317:5;6314:32;6304:60;;6360:1;6357;6350:12;6974:384;-1:-1:-1;;;;;;7159:33:14;;7147:46;;7216:13;;7129:3;;7238:74;7216:13;7301:1;7292:11;;7285:4;7273:17;;7238:74;:::i;:::-;7332:16;;;;7350:1;7328:24;;6974:384;-1:-1:-1;;;6974:384:14:o;7363:287::-;7492:3;7530:6;7524:13;7546:66;7605:6;7600:3;7593:4;7585:6;7581:17;7546:66;:::i;:::-;7628:16;;;;;7363:287;-1:-1:-1;;7363:287:14:o;8518:439::-;8768:2;8757:9;8750:21;8731:4;8794:49;8839:2;8828:9;8824:18;8431:2;8419:15;;-1:-1:-1;;;8459:4:14;8450:14;;8443:36;8504:2;8495:12;;8354:159;8794:49;8891:9;8883:6;8879:22;8874:2;8863:9;8859:18;8852:50;8919:32;8944:6;8936;8919:32;:::i;:::-;8911:40;8518:439;-1:-1:-1;;;;8518:439:14:o;9126:::-;9376:2;9365:9;9358:21;9339:4;9402:49;9447:2;9436:9;9432:18;9039:2;9027:15;;-1:-1:-1;;;9067:4:14;9058:14;;9051:36;9112:2;9103:12;;8962:159;9973:348;10203:2;10192:9;10185:21;10166:4;10223:49;10268:2;10257:9;10253:18;8431:2;8419:15;;-1:-1:-1;;;8459:4:14;8450:14;;8443:36;8504:2;8495:12;;8354:159;10223:49;10215:57;;10308:6;10303:2;10292:9;10288:18;10281:34;9973:348;;;;:::o;10326:::-;10556:2;10545:9;10538:21;10519:4;10576:49;10621:2;10610:9;10606:18;9039:2;9027:15;;-1:-1:-1;;;9067:4:14;9058:14;;9051:36;9112:2;9103:12;;8962:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testName()": "cc8668de",
    "testOnlyOwnerCanMint()": "a0df47b3",
    "testSupply()": "e6b718ca",
    "testTokenSymbol()": "6df35e4c",
    "testTransferAliceToBob()": "a468c3fa",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOnlyOwnerCanMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferAliceToBob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FoundryToken.t.sol\":\"FoundryTokenTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda\",\"dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xc459d9a0d73b6bd17d6feddfe939ad57840dff4d3680c69700b7e7a968ff3a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3007c9a200d88e7c67d5d8d7c86bad540b7d6da93723b2bf149a110f6445aa0f\",\"dweb:/ipfs/QmTrrE624Ze4DXEz5UMzPRyv9eVk4P2y9goGVyGsy6WVfS\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x7fbf0f0e61136eabfd6367bfa5648a146f3464e73cf90b25cd08dd20e96c97fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac346adfa56f76ec0e736a61e7588c96afe9e7bc0730533c56a0b58890ee4b42\",\"dweb:/ipfs/QmcR2ZtsAPGNJRDymygyKD8cBs49EVc9KikWgaw11bRsyw\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x0194d87bb184da4295c7174ccd3091e56605730ab07f1ba065c45cb27a255279\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1945d01d225c4ee8def6aafcf0249264b82a86486c3dada698d786ae9156bb9f\",\"dweb:/ipfs/QmZjWqSu2Qq76PjsBLGrDnqFJrPVj1zE8RbCj2jNLZan1Z\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x01bde27c667a925905685599b65e6daf424beba80860b68187cc266350f3d704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18e6ba16127930324e9c4d4a42f077e1bfe38257726724859f6441e22bef35d4\",\"dweb:/ipfs/QmbyMUzdSHWQEQcZ3Yz4j5iRhEj472cvcwHNb9Eq3esGJA\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488\",\"dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x743aecd6496301fa0dfd63a14e7ed8878be11a6ff29e19f3fec815407455e720\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fcc199b42eda8f9fe2c9c013371ade870224495d4d3d230f92a8cf6f7761bc\",\"dweb:/ipfs/QmXNRDTDwKsqrEyHprtiYgbF2FrvBZvuYN2viXbPLnLkJ9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/FoundryToken.sol\":{\"keccak256\":\"0xd10cd7f7c5a769f8f76c122516ac9015478f1be9048432c368a8b81905e918e4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ee78476ef5b71a63d6cf13b5a12b634e8f284338fceae01b99d44bcefc92f95d\",\"dweb:/ipfs/QmcAX15bTgCV6nwxHM1p5wAQ6fKeG1UKB84dwdvBeAx1TB\"]},\"test/FoundryToken.t.sol\":{\"keccak256\":\"0x8f369add6310bb574492423bce8db7e894891482b309b175f647bf0e1b80b141\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0eafd919c2f1ae0f180791fbfc62156a80a3f2d0b5531fd2238bddf5bb1cc158\",\"dweb:/ipfs/QmV9pujipicQsCnyqiPhiW4B5BLRn4Y3wKPr9RhvuAeoGG\"]},\"test/utils/Utilities.sol\":{\"keccak256\":\"0x07341f52c87edba40e8fdce715357c4fb9b3942ba7f9fdb9200235fb2512d19d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81f52c926b8f8215ad82019d00f706f5b4ec493cbeea2de86076e0bcaa1631f2\",\"dweb:/ipfs/QmRLx6Zf9geqJniNC6paeJihoZP7oi5wjyX61ND9NsNkJ1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testName"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOnlyOwnerCanMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSupply"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenSymbol"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferAliceToBob"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FoundryToken.t.sol": "FoundryTokenTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e",
        "urls": [
          "bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda",
          "dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0xc459d9a0d73b6bd17d6feddfe939ad57840dff4d3680c69700b7e7a968ff3a74",
        "urls": [
          "bzz-raw://3007c9a200d88e7c67d5d8d7c86bad540b7d6da93723b2bf149a110f6445aa0f",
          "dweb:/ipfs/QmTrrE624Ze4DXEz5UMzPRyv9eVk4P2y9goGVyGsy6WVfS"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x7fbf0f0e61136eabfd6367bfa5648a146f3464e73cf90b25cd08dd20e96c97fc",
        "urls": [
          "bzz-raw://ac346adfa56f76ec0e736a61e7588c96afe9e7bc0730533c56a0b58890ee4b42",
          "dweb:/ipfs/QmcR2ZtsAPGNJRDymygyKD8cBs49EVc9KikWgaw11bRsyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x0194d87bb184da4295c7174ccd3091e56605730ab07f1ba065c45cb27a255279",
        "urls": [
          "bzz-raw://1945d01d225c4ee8def6aafcf0249264b82a86486c3dada698d786ae9156bb9f",
          "dweb:/ipfs/QmZjWqSu2Qq76PjsBLGrDnqFJrPVj1zE8RbCj2jNLZan1Z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x01bde27c667a925905685599b65e6daf424beba80860b68187cc266350f3d704",
        "urls": [
          "bzz-raw://18e6ba16127930324e9c4d4a42f077e1bfe38257726724859f6441e22bef35d4",
          "dweb:/ipfs/QmbyMUzdSHWQEQcZ3Yz4j5iRhEj472cvcwHNb9Eq3esGJA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5",
        "urls": [
          "bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488",
          "dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x743aecd6496301fa0dfd63a14e7ed8878be11a6ff29e19f3fec815407455e720",
        "urls": [
          "bzz-raw://b9fcc199b42eda8f9fe2c9c013371ade870224495d4d3d230f92a8cf6f7761bc",
          "dweb:/ipfs/QmXNRDTDwKsqrEyHprtiYgbF2FrvBZvuYN2viXbPLnLkJ9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/FoundryToken.sol": {
        "keccak256": "0xd10cd7f7c5a769f8f76c122516ac9015478f1be9048432c368a8b81905e918e4",
        "urls": [
          "bzz-raw://ee78476ef5b71a63d6cf13b5a12b634e8f284338fceae01b99d44bcefc92f95d",
          "dweb:/ipfs/QmcAX15bTgCV6nwxHM1p5wAQ6fKeG1UKB84dwdvBeAx1TB"
        ],
        "license": "UNLICENSED"
      },
      "test/FoundryToken.t.sol": {
        "keccak256": "0x8f369add6310bb574492423bce8db7e894891482b309b175f647bf0e1b80b141",
        "urls": [
          "bzz-raw://0eafd919c2f1ae0f180791fbfc62156a80a3f2d0b5531fd2238bddf5bb1cc158",
          "dweb:/ipfs/QmV9pujipicQsCnyqiPhiW4B5BLRn4Y3wKPr9RhvuAeoGG"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/Utilities.sol": {
        "keccak256": "0x07341f52c87edba40e8fdce715357c4fb9b3942ba7f9fdb9200235fb2512d19d",
        "urls": [
          "bzz-raw://81f52c926b8f8215ad82019d00f706f5b4ec493cbeea2de86076e0bcaa1631f2",
          "dweb:/ipfs/QmRLx6Zf9geqJniNC6paeJihoZP7oi5wjyX61ND9NsNkJ1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FoundryToken.t.sol",
    "id": 22634,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "FoundryToken": [
        22416
      ],
      "FoundryTokenTest": [
        22633
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3553
      ],
      "Test": [
        3455
      ],
      "Utilities": [
        22752
      ],
      "Vm": [
        5423
      ],
      "console": [
        13487
      ],
      "console2": [
        21551
      ],
      "stdError": [
        3525
      ],
      "stdMath": [
        4794
      ],
      "stdStorage": [
        4655
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:2673:12",
    "nodes": [
      {
        "id": 22418,
        "nodeType": "PragmaDirective",
        "src": "40:24:12",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 22419,
        "nodeType": "ImportDirective",
        "src": "68:28:12",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22634,
        "sourceUnit": 4795,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22421,
        "nodeType": "ImportDirective",
        "src": "100:48:12",
        "nodes": [],
        "absolutePath": "test/utils/Utilities.sol",
        "file": "./utils/Utilities.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22634,
        "sourceUnit": 22753,
        "symbolAliases": [
          {
            "foreign": {
              "id": 22420,
              "name": "Utilities",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22752,
              "src": "108:9:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 22423,
        "nodeType": "ImportDirective",
        "src": "150:53:12",
        "nodes": [],
        "absolutePath": "src/FoundryToken.sol",
        "file": "../src/FoundryToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22634,
        "sourceUnit": 22417,
        "symbolAliases": [
          {
            "foreign": {
              "id": 22422,
              "name": "FoundryToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22416,
              "src": "158:12:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 22633,
        "nodeType": "ContractDefinition",
        "src": "207:2504:12",
        "nodes": [
          {
            "id": 22428,
            "nodeType": "VariableDeclaration",
            "src": "248:24:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "267:5:12",
            "scope": 22633,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Utilities_$22752",
              "typeString": "contract Utilities"
            },
            "typeName": {
              "id": 22427,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22426,
                "name": "Utilities",
                "nameLocations": [
                  "248:9:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22752,
                "src": "248:9:12"
              },
              "referencedDeclaration": 22752,
              "src": "248:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utilities_$22752",
                "typeString": "contract Utilities"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22431,
            "nodeType": "VariableDeclaration",
            "src": "279:27:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "301:5:12",
            "scope": 22633,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FoundryToken_$22416",
              "typeString": "contract FoundryToken"
            },
            "typeName": {
              "id": 22430,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22429,
                "name": "FoundryToken",
                "nameLocations": [
                  "279:12:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22416,
                "src": "279:12:12"
              },
              "referencedDeclaration": 22416,
              "src": "279:12:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FoundryToken_$22416",
                "typeString": "contract FoundryToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22433,
            "nodeType": "VariableDeclaration",
            "src": "315:30:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "340:5:12",
            "scope": 22633,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 22432,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "315:15:12",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22435,
            "nodeType": "VariableDeclaration",
            "src": "383:28:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "408:3:12",
            "scope": 22633,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 22434,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "383:15:12",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22488,
            "nodeType": "FunctionDefinition",
            "src": "449:437:12",
            "nodes": [],
            "body": {
              "id": 22487,
              "nodeType": "Block",
              "src": "473:413:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 22443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22438,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22428,
                      "src": "484:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utilities_$22752",
                        "typeString": "contract Utilities"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "492:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Utilities_$22752_$",
                          "typeString": "function () returns (contract Utilities)"
                        },
                        "typeName": {
                          "id": 22440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 22439,
                            "name": "Utilities",
                            "nameLocations": [
                              "496:9:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22752,
                            "src": "496:9:12"
                          },
                          "referencedDeclaration": 22752,
                          "src": "496:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utilities_$22752",
                            "typeString": "contract Utilities"
                          }
                        }
                      },
                      "id": 22442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "492:15:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utilities_$22752",
                        "typeString": "contract Utilities"
                      }
                    },
                    "src": "484:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utilities_$22752",
                      "typeString": "contract Utilities"
                    }
                  },
                  "id": 22444,
                  "nodeType": "ExpressionStatement",
                  "src": "484:23:12"
                },
                {
                  "expression": {
                    "id": 22451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22445,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22431,
                      "src": "518:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FoundryToken_$22416",
                        "typeString": "contract FoundryToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31303030",
                          "id": 22449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "id": 22448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "526:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_FoundryToken_$22416_$",
                          "typeString": "function (uint256) returns (contract FoundryToken)"
                        },
                        "typeName": {
                          "id": 22447,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 22446,
                            "name": "FoundryToken",
                            "nameLocations": [
                              "530:12:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22416,
                            "src": "530:12:12"
                          },
                          "referencedDeclaration": 22416,
                          "src": "530:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FoundryToken_$22416",
                            "typeString": "contract FoundryToken"
                          }
                        }
                      },
                      "id": 22450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:22:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FoundryToken_$22416",
                        "typeString": "contract FoundryToken"
                      }
                    },
                    "src": "518:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FoundryToken_$22416",
                      "typeString": "contract FoundryToken"
                    }
                  },
                  "id": 22452,
                  "nodeType": "ExpressionStatement",
                  "src": "518:30:12"
                },
                {
                  "assignments": [
                    22455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22455,
                      "mutability": "mutable",
                      "name": "users",
                      "nameLocation": "650:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 22487,
                      "src": "625:30:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 22453,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "625:15:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 22454,
                        "nodeType": "ArrayTypeName",
                        "src": "625:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                          "typeString": "address payable[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22460,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 22458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "676:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 22456,
                        "name": "utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22428,
                        "src": "658:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Utilities_$22752",
                          "typeString": "contract Utilities"
                        }
                      },
                      "id": 22457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "664:11:12",
                      "memberName": "createUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22731,
                      "src": "658:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) external returns (address payable[] memory)"
                      }
                    },
                    "id": 22459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                      "typeString": "address payable[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "625:53:12"
                },
                {
                  "expression": {
                    "id": 22465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22461,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22433,
                      "src": "730:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 22462,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22455,
                        "src": "738:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        }
                      },
                      "id": 22464,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 22463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "744:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "738:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "730:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 22466,
                  "nodeType": "ExpressionStatement",
                  "src": "730:16:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22470,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22433,
                        "src": "766:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 22471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "773:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 22467,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "757:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "760:5:12",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "757:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 22472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22473,
                  "nodeType": "ExpressionStatement",
                  "src": "757:24:12"
                },
                {
                  "expression": {
                    "id": 22478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22474,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22435,
                      "src": "833:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 22475,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22455,
                        "src": "839:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        }
                      },
                      "id": 22477,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 22476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "839:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "833:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 22479,
                  "nodeType": "ExpressionStatement",
                  "src": "833:14:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22483,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22435,
                        "src": "867:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 22484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "872:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 22480,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "858:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "861:5:12",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "858:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 22485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22486,
                  "nodeType": "ExpressionStatement",
                  "src": "858:20:12"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "458:5:12",
            "parameters": {
              "id": 22436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:2:12"
            },
            "returnParameters": {
              "id": 22437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:0:12"
            },
            "scope": 22633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22499,
            "nodeType": "FunctionDefinition",
            "src": "929:84:12",
            "nodes": [],
            "body": {
              "id": 22498,
              "nodeType": "Block",
              "src": "956:57:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 22492,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22431,
                            "src": "976:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryToken_$22416",
                              "typeString": "contract FoundryToken"
                            }
                          },
                          "id": 22493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "982:4:12",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21719,
                          "src": "976:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 22494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "976:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "466f756e647279546f6b656e",
                        "id": 22495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "990:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee4a966262c4384020e15199b8236ec37dcfccee32b9a942db447a5dc9ce90b6",
                          "typeString": "literal_string \"FoundryToken\""
                        },
                        "value": "FoundryToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee4a966262c4384020e15199b8236ec37dcfccee32b9a942db447a5dc9ce90b6",
                          "typeString": "literal_string \"FoundryToken\""
                        }
                      ],
                      "id": 22491,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "967:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 22496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "967:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22497,
                  "nodeType": "ExpressionStatement",
                  "src": "967:38:12"
                }
              ]
            },
            "functionSelector": "cc8668de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testName",
            "nameLocation": "938:8:12",
            "parameters": {
              "id": 22489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:12"
            },
            "returnParameters": {
              "id": 22490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:12"
            },
            "scope": 22633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22510,
            "nodeType": "FunctionDefinition",
            "src": "1058:84:12",
            "nodes": [],
            "body": {
              "id": 22509,
              "nodeType": "Block",
              "src": "1092:50:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 22503,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22431,
                            "src": "1112:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryToken_$22416",
                              "typeString": "contract FoundryToken"
                            }
                          },
                          "id": 22504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1118:6:12",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21729,
                          "src": "1112:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 22505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1112:14:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "46544b",
                        "id": 22506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1128:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02bca2b3c9dc86ef031c0cc3e00d82c459209872591be274d19868b0c5bb8641",
                          "typeString": "literal_string \"FTK\""
                        },
                        "value": "FTK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02bca2b3c9dc86ef031c0cc3e00d82c459209872591be274d19868b0c5bb8641",
                          "typeString": "literal_string \"FTK\""
                        }
                      ],
                      "id": 22502,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1103:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 22507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22508,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:31:12"
                }
              ]
            },
            "functionSelector": "6df35e4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenSymbol",
            "nameLocation": "1067:15:12",
            "parameters": {
              "id": 22500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:12"
            },
            "returnParameters": {
              "id": 22501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:0:12"
            },
            "scope": 22633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22521,
            "nodeType": "FunctionDefinition",
            "src": "1195:83:12",
            "nodes": [],
            "body": {
              "id": 22520,
              "nodeType": "Block",
              "src": "1224:54:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 22514,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22431,
                            "src": "1244:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryToken_$22416",
                              "typeString": "contract FoundryToken"
                            }
                          },
                          "id": 22515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1250:11:12",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21749,
                          "src": "1244:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 22516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1244:19:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 22517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1265:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 22513,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1235:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22519,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:35:12"
                }
              ]
            },
            "functionSelector": "e6b718ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSupply",
            "nameLocation": "1204:10:12",
            "parameters": {
              "id": 22511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1214:2:12"
            },
            "returnParameters": {
              "id": 22512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:0:12"
            },
            "scope": 22633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22564,
            "nodeType": "FunctionDefinition",
            "src": "1340:361:12",
            "nodes": [],
            "body": {
              "id": 22563,
              "nodeType": "Block",
              "src": "1379:322:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22529,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1455:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryTokenTest_$22633",
                              "typeString": "contract FoundryTokenTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FoundryTokenTest_$22633",
                              "typeString": "contract FoundryTokenTest"
                            }
                          ],
                          "id": 22528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1447:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22527,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1447:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 22531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 22524,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22431,
                        "src": "1433:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FoundryToken_$22416",
                          "typeString": "contract FoundryToken"
                        }
                      },
                      "id": 22526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1439:7:12",
                      "memberName": "mintFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22415,
                      "src": "1433:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 22532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22533,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 22535,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22431,
                            "src": "1487:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryToken_$22416",
                              "typeString": "contract FoundryToken"
                            }
                          },
                          "id": 22536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1493:11:12",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21749,
                          "src": "1487:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 22537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:19:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 22538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1508:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "id": 22534,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1478:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22540,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:35:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22544,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22433,
                        "src": "1581:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22541,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1567:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1570:10:12",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5019,
                      "src": "1567:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 22545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22546,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:20:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 22552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1620:34:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 22551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1614:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 22550,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1614:5:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1614:41:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 22547,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1598:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1601:12:12",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5055,
                      "src": "1598:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 22554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22555,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22559,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22433,
                        "src": "1681:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 22560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1688:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 22556,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22431,
                        "src": "1667:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FoundryToken_$22416",
                          "typeString": "contract FoundryToken"
                        }
                      },
                      "id": 22558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1673:7:12",
                      "memberName": "mintFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22415,
                      "src": "1667:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 22561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22562,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:26:12"
                }
              ]
            },
            "functionSelector": "a0df47b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOnlyOwnerCanMint",
            "nameLocation": "1349:20:12",
            "parameters": {
              "id": 22522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:2:12"
            },
            "returnParameters": {
              "id": 22523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1379:0:12"
            },
            "scope": 22633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22632,
            "nodeType": "FunctionDefinition",
            "src": "1885:823:12",
            "nodes": [],
            "body": {
              "id": 22631,
              "nodeType": "Block",
              "src": "1926:782:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    22568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22568,
                      "mutability": "mutable",
                      "name": "_ammountToTransfer",
                      "nameLocation": "1955:18:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 22631,
                      "src": "1947:26:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22570,
                  "initialValue": {
                    "hexValue": "313030",
                    "id": 22569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1976:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:32:12"
                },
                {
                  "assignments": [
                    22572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22572,
                      "mutability": "mutable",
                      "name": "_inititalBobBalance",
                      "nameLocation": "2069:19:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 22631,
                      "src": "2061:27:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2061:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22577,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 22575,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22435,
                        "src": "2107:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22573,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22431,
                        "src": "2091:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FoundryToken_$22416",
                          "typeString": "contract FoundryToken"
                        }
                      },
                      "id": 22574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2097:9:12",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21763,
                      "src": "2091:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 22576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2091:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2061:50:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22579,
                        "name": "_inititalBobBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22572,
                        "src": "2131:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 22580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2152:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 22578,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2122:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22582,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:32:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22586,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22433,
                        "src": "2251:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 22587,
                        "name": "_ammountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22568,
                        "src": "2258:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 22583,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22431,
                        "src": "2236:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FoundryToken_$22416",
                          "typeString": "contract FoundryToken"
                        }
                      },
                      "id": 22585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2242:8:12",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21788,
                      "src": "2236:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 22588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2236:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22589,
                  "nodeType": "ExpressionStatement",
                  "src": "2236:41:12"
                },
                {
                  "assignments": [
                    22591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22591,
                      "mutability": "mutable",
                      "name": "_inititalAliceBalance",
                      "nameLocation": "2340:21:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 22631,
                      "src": "2332:29:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22590,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2332:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22596,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 22594,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22433,
                        "src": "2380:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22592,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22431,
                        "src": "2364:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FoundryToken_$22416",
                          "typeString": "contract FoundryToken"
                        }
                      },
                      "id": 22593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2370:9:12",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21763,
                      "src": "2364:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 22595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2332:54:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22598,
                        "name": "_inititalAliceBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22591,
                        "src": "2406:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22599,
                        "name": "_ammountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22568,
                        "src": "2429:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22597,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2397:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22601,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22605,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22433,
                        "src": "2516:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22602,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2502:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2505:10:12",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5019,
                      "src": "2502:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 22606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2502:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22607,
                  "nodeType": "ExpressionStatement",
                  "src": "2502:20:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22611,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22435,
                        "src": "2548:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3630",
                        "id": 22612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2553:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "expression": {
                        "id": 22608,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22431,
                        "src": "2533:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FoundryToken_$22416",
                          "typeString": "contract FoundryToken"
                        }
                      },
                      "id": 22610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2539:8:12",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21788,
                      "src": "2533:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 22613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2533:23:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22614,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:23:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22618,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22433,
                            "src": "2592:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 22616,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22431,
                            "src": "2576:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryToken_$22416",
                              "typeString": "contract FoundryToken"
                            }
                          },
                          "id": 22617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2582:9:12",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21763,
                          "src": "2576:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:22:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3430",
                        "id": 22620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2600:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 22615,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2567:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22622,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:36:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22626,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22435,
                            "src": "2689:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 22624,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22431,
                            "src": "2673:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FoundryToken_$22416",
                              "typeString": "contract FoundryToken"
                            }
                          },
                          "id": 22625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2679:9:12",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21763,
                          "src": "2673:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2673:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3630",
                        "id": 22628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2695:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "id": 22623,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2664:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2664:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22630,
                  "nodeType": "ExpressionStatement",
                  "src": "2664:34:12"
                }
              ]
            },
            "functionSelector": "a468c3fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferAliceToBob",
            "nameLocation": "1894:22:12",
            "parameters": {
              "id": 22565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1916:2:12"
            },
            "returnParameters": {
              "id": 22566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1926:0:12"
            },
            "scope": 22633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22424,
              "name": "Test",
              "nameLocations": [
                "236:4:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3455,
              "src": "236:4:12"
            },
            "id": 22425,
            "nodeType": "InheritanceSpecifier",
            "src": "236:4:12"
          }
        ],
        "canonicalName": "FoundryTokenTest",
        "contractDependencies": [
          22416,
          22752
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          22633,
          3455,
          2022,
          1786
        ],
        "name": "FoundryTokenTest",
        "nameLocation": "216:16:12",
        "scope": 22634,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 12
}